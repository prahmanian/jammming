{"version":3,"sources":["util/Spotify.js","Components/SearchBar/SearchBar.js","Components/Track/Track.js","Components/TrackList/TrackList.js","Components/SearchResults/SearchResults.js","Components/Playlist/Playlist.js","util/private.js","Components/DeleteButton/DeleteButton.js","Components/EmbeddedPlaylist/EmbeddedPlaylist.js","Components/EmbeddedPlaylists/EmbeddedPlaylists.js","Components/App/App.js","reportWebVitals.js","index.js"],"names":["token","SearchBar","props","search","bind","handleTermChange","state","term","this","onSearch","event","setState","target","value","className","placeholder","onChange","onClick","React","Component","Track","addTrack","removeTrack","isRemoval","onAdd","track","onRemove","name","artist","album","renderAction","TrackList","tracks","map","id","SearchResults","searchResults","isremoval","Playlist","handleNameChange","onNameChange","playlistName","playlistTracks","onSave","Spotify","getAccessToken","accessTokenMatch","window","location","href","match","expiresInMatch","expiresIn","Number","setTimeout","history","pushState","accessUrl","searchTerm","accessToken","fetch","headers","Authorization","then","response","json","jsonResponse","items","artists","uri","savePlaylist","trackURIs","resetCallback","length","userId","console","log","method","body","JSON","stringify","playlistId","uris","getPlaylists","filter","playlist","owner","removePlaylist","DeleteButton","isHovered","toggleHover","e","preventDefault","previousState","onMouseEnter","onMouseLeave","EmbeddedPLaylist","src","title","width","height","frameBorder","allowtransparency","allow","EmbeddedPLaylists","playlists","App","updatePlaylistName","reset","find","playlistTrack","newPlaylist","push","filteredTracks","results","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8047a5a5.chunk.js","sourcesContent":["// import spotify Client ID\nimport {clientId} from './private'\n// const redirectUri  = 'http://localhost:3001/'\n// const redirectUri  = 'http://pedram-jammming.surge.sh' //deployed to surge\nconst redirectUri = 'https://prahmanian.github.io/jammming/' //deployed to GitHub Pages\n\n// variable to hold user's token\nlet token\n\n// Use of Implicit Grant Flow to get Spotify user's access token\n\n// Spotify module\nconst Spotify = {\n    getAccessToken() {\n        if (token) {return token}\n\n        // check for access token match\n        const accessTokenMatch = window.location.href.match(/access_token=([^&]*)/);\n        const expiresInMatch = window.location.href.match(/expires_in=([^&]*)/)\n\n        if (accessTokenMatch && expiresInMatch) {\n            token = accessTokenMatch[1];\n            const expiresIn = Number(expiresInMatch[1]);\n\n            //This clears the parameterss so we can grab a new token when it expires\n            window.setTimeout(() => token = '', expiresIn * 1000);\n            window.history.pushState('Access Token', null, '/')\n            return token\n        } else {\n            const accessUrl = `https://accounts.spotify.com/authorize?client_id=${clientId}&response_type=token&scope=playlist-modify-public&redirect_uri=${redirectUri}`\n            window.location = accessUrl\n        }\n    },\n\n    // search functionality\n    search(searchTerm) {\n        const accessToken = Spotify.getAccessToken()\n        return fetch(`https://api.spotify.com/v1/search?type=track&q=${searchTerm}`, {\n            headers: {\n                Authorization: `Bearer ${accessToken}`\n            }\n        }).then(response => {return response.json()}).then(\n            jsonResponse => {\n                // if no tracks in response, return empty array\n                if (!jsonResponse.tracks) {return []}\n                return jsonResponse.tracks.items.map(track => {\n                    // format tracks to our shape\n                    return {\n                        id: track.id,\n                        name: track.name,\n                        artist: track.artists[0].name,\n                        album: track.album.name,\n                        uri: track.uri\n                    }\n                })\n            }\n        )\n    },\n\n    savePlaylist(name, trackURIs, resetCallback) {\n        if(!name || !trackURIs.length) {return}\n\n        const accessToken = Spotify.getAccessToken()\n        const headers = {Authorization: `Bearer ${accessToken}`,}\n        let userId\n\n        return fetch(`https://api.spotify.com/v1/me`, {headers: headers})\n            .then(response => {return response.json()})\n            .then(jsonResponse => {\n                console.log('User: ', jsonResponse)\n                userId = jsonResponse.id\n                return fetch(`https://api.spotify.com/v1/users/${userId}/playlists`, {\n                    headers: headers,\n                    method: 'POST',\n                    body: JSON.stringify({name: name})\n                }).then(response => response.json())\n                .then(jsonResponse => {\n                    const playlistId = jsonResponse.id\n                    console.log('Playlist ID: ', playlistId)\n                    return fetch(`https://api.spotify.com/v1/users/${userId}/playlists/${playlistId}/tracks`, {\n                        headers: headers,\n                        method: \"POST\",\n                        body: JSON.stringify({uris: trackURIs})\n                    })\n                })\n            }).then(() => resetCallback())\n    },\n\n    getPlaylists(){\n        const accessToken = Spotify.getAccessToken()\n        const headers = {Authorization: `Bearer ${accessToken}`,}\n        let userId\n\n        // get userId\n        return fetch(`https://api.spotify.com/v1/me`, {headers: headers})\n            .then(response => {return response.json()})\n            .then(jsonResponse => {\n                console.log('User: ', jsonResponse)\n                userId = jsonResponse.id\n                // get playlists\n                return fetch(`https://api.spotify.com/v1/me/playlists?limit=10`, {\n                    headers: headers,\n                }).then(response => {return response.json()}).then(\n                    jsonResponse => {\n                        // filter out playlists not created by the user\n                        const filtered = jsonResponse.items.filter(playlist => playlist.owner.id === userId)\n                        return filtered\n                    }\n                )\n            })\n    },\n\n    removePlaylist(id) {\n        const accessToken = Spotify.getAccessToken()\n        const headers = {Authorization: `Bearer ${accessToken}`,}\n\n        return fetch(`https://api.spotify.com/v1/playlists/${id}/followers`, {\n            headers: headers,\n            method: 'DELETE'\n        })\n    }\n}\n\nexport default Spotify","import React from 'react'\nimport './SearchBar.css'\n\nexport default class SearchBar extends React.Component {\n    constructor(props){\n        super(props)\n        this.search = this.search.bind(this)\n        this.handleTermChange = this.handleTermChange.bind(this)\n        this.state = {\n            term: ''\n        }\n    }\n\n    search(){\n        this.props.onSearch(this.state.term)\n    }\n\n    handleTermChange(event) {\n        this.setState({term: event.target.value})\n    }\n    render() {\n        return (\n            <div className='SearchBar'>\n                <input placeholder=\"Enter A Song, Album, or Artist\" onChange={this.handleTermChange}/>\n                <button className=\"SearchButton\" onClick={this.search}>SEARCH</button>\n            </div>\n        )\n    }\n}","import React from 'react'\nimport './Track.css'\n\n\nexport default class Track extends React.Component {\n    constructor(props){\n        super(props)\n        this.addTrack = this.addTrack.bind(this)\n        this.removeTrack = this.removeTrack.bind(this)\n    }\n\n    renderAction(){\n        return this.props.isRemoval\n            ? <button className=\"Track-action\" onClick={this.removeTrack}>-</button>\n            : <button className=\"Track-action\" onClick={this.addTrack}>+</button>\n    }\n\n    addTrack() {\n        this.props.onAdd(this.props.track)\n    }\n\n    removeTrack() {\n        this.props.onRemove(this.props.track)\n    }\n\n    render() {\n        const {track} =this.props\n        return(\n            <div className=\"Track\">\n                <div className=\"Track-information\">\n                    <h3>{track.name}</h3>\n                    <p>{track.artist} | {track.album}</p>\n                </div>\n\n                {this.renderAction()}\n            </div>\n        )\n    }\n}","import React from 'react'\nimport './TrackList.css'\n\nimport Track from '../Track/Track.js'\n\n\nexport default class TrackList extends React.Component {\n    render() {\n        return (\n            <div className='TrackList'>\n                {this.props.tracks.map(track => {\n                    return <Track \n                        key={track.id} \n                        track={track}\n                        onAdd={this.props.onAdd}\n                        onRemove={this.props.onRemove}\n                        isRemoval={this.props.isRemoval}\n                    />})}\n            </div>\n        )\n    }\n}","import React from 'react'\nimport './SearchResults.css'\n\nimport TrackList from '../TrackList/TrackList.js'\n\nexport default class SearchResults extends React.Component {\n    render() {\n        return (\n            <div className=\"SearchResults\">\n                <h2>Results</h2>\n                <TrackList \n                    tracks={this.props.searchResults} \n                    onAdd={this.props.onAdd}\n                    isremoval={false}\n                />\n            </div>\n        )\n    }\n}","import React from 'react'\nimport './Playlist.css'\n\nimport TrackList from '../TrackList/TrackList.js'\n\nexport default class Playlist extends React.Component {\n    constructor(props){\n        super(props)\n        this.handleNameChange = this.handleNameChange.bind(this)\n    }\n\n    handleNameChange(event) {\n        this.props.onNameChange(event.target.value)\n    }\n\n    render() {\n        return (\n            <div className=\"Playlist\">\n                <input value={this.props.playlistName} onChange={this.handleNameChange}/>\n                <TrackList \n                    tracks={this.props.playlistTracks}\n                    isRemoval={true}\n                    onRemove={this.props.onRemove}\n                />\n                <button className='Playlist-save' onClick={this.props.onSave}>SAVE TO SPOTIFY</button>\n\n            </div>\n        )\n    }\n}","// spotify app clientID\nexport const clientId = '720df69f5a4647a6980a7e93ea2c379a'","import React from 'react'\nimport {AiOutlineDelete, AiFillDelete} from 'react-icons/ai'\nimport './DeleteButton.css'\n\n\nexport default class DeleteButton extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            isHovered: false\n        }\n        this.toggleHover = this.toggleHover.bind(this)\n        this.removePlaylist = this.removePlaylist.bind(this)\n    }\n\n    toggleHover(e) {\n        e.preventDefault()\n        this.setState(previousState => ({isHovered: !previousState.isHovered}))\n    }\n\n    removePlaylist() {\n        this.props.removePlaylist(this.props.id)\n    }\n\n    render() {\n        return (\n            <div \n                className='Delete'\n                onMouseEnter={this.toggleHover}\n                onMouseLeave={this.toggleHover}\n                onClick={this.removePlaylist}\n                \n            >\n                {/* <button  className='DeleteButton'>\n                    {this.state.isHovered ? <AiFillDelete className=\"icon fill\"/> : <AiOutlineDelete className=\"icon\"/>}\n                </button> */}\n                {this.state.isHovered ? <AiFillDelete className=\"icon fill\"/> : <AiOutlineDelete className=\"icon\"/>}\n            </div>\n        )\n    }\n}","import React from 'react'\nimport DeleteButton from '../DeleteButton/DeleteButton'\n\nexport default class EmbeddedPLaylist extends React.Component {\n    render() {\n        return (\n            <div className='EmbeddedPlaylist'>\n                <iframe \n                    src={`https://open.spotify.com/embed/playlist/${this.props.playlist.id}`} \n                    title={this.props.playlist.name} \n                    width=\"300\" \n                    height=\"380\" \n                    frameBorder=\"0\" \n                    allowtransparency=\"true\" \n                    allow=\"encrypted-media\"\n                ></iframe>\n                <DeleteButton id={this.props.playlist.id} removePlaylist={this.props.removePlaylist}/>\n\n\n            </div>\n        )\n    }\n}","import React from 'react'\nimport EmbeddedPLaylist from '../EmbeddedPlaylist/EmbeddedPlaylist'\nimport './EmbeddedPlaylists.css'\n\nexport default class EmbeddedPLaylists extends React.Component {\n    render() {\n        return (\n            <div className='EmbeddedPlaylists'>\n                <h2>Your Playlists</h2>\n                <div className='PlaylistContainer'>\n                    {this.props.playlists.map(playlist => {\n                        return <EmbeddedPLaylist playlist={playlist} key={playlist.id} removePlaylist={this.props.removePlaylist}/>\n                    })}\n                </div>\n                \n            </div>\n        )\n    }\n}","import React from 'react'\nimport './App.css';\n\nimport SearchBar from '../../Components/SearchBar/SearchBar.js'\nimport SearchResults from '../../Components/SearchResults/SearchResults.js'\nimport Playlist from '../../Components/Playlist/Playlist.js'\n\nimport Spotify from '../../util/Spotify';\nimport EmbeddedPLaylists from '../EmbeddedPlaylists/EmbeddedPlaylists';\n\nexport default class App extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      searchResults: [],\n      playlistName: 'New Playlist',\n      playlistTracks: [],\n      playlists: [],\n    }\n    this.addTrack = this.addTrack.bind(this)\n    this.removeTrack = this.removeTrack.bind(this)\n    this.updatePlaylistName = this.updatePlaylistName.bind(this)\n    this.savePlaylist = this.savePlaylist.bind(this)\n    this.search = this.search.bind(this)\n    this.reset = this.reset.bind(this)\n    this.getPlaylists = this.getPlaylists.bind(this)\n    this.removePlaylist = this.removePlaylist.bind(this)\n  }\n\n  componentDidMount() {\n    this.getPlaylists()\n  }\n\n  addTrack(track) {\n    // check to see if track is already in playlistTracks\n    if (this.state.playlistTracks.find(playlistTrack => playlistTrack.id === track.id)) {\n      // if it does, break out fo the method\n      return;\n    }\n    // if it does not, add track to end of playlist and update state\n    const newPlaylist = this.state.playlistTracks\n    newPlaylist.push(track)\n    this.setState({playlistTracks: newPlaylist})\n  }\n\n  removeTrack(track){\n    const filteredTracks = this.state.playlistTracks.filter(playlistTrack => playlistTrack.id !== track.id);\n    this.setState({playlistTracks: filteredTracks})\n  }\n\n  updatePlaylistName(name) {\n    this.setState({playlistName: name})\n  }\n\n  savePlaylist(){\n    const trackURIs = this.state.playlistTracks.map(track => {return track.uri})\n    Spotify.savePlaylist(this.state.playlistName, trackURIs, this.reset)\n  }\n\n  search(searchTerm) {\n    console.log('search term: ', searchTerm)\n    Spotify.search(searchTerm).then( results => {\n      this.setState({searchResults: results})\n    })\n  }\n\n  getPlaylists(){\n    Spotify.getPlaylists().then(playlists => {this.setState({playlists: playlists})})\n  }\n\n  removePlaylist(id){\n    Spotify.removePlaylist(id).then(() => {this.getPlaylists()})\n  }\n\n  reset() {\n    this.setState({\n      playlistName:'New Playlist', \n      playlistTracks: []\n    })\n    this.getPlaylists()\n    // .then(console.log('state.playlistName: ', this.state.playlistName))\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Ja<span className=\"highlight\">mmm</span>ing</h1>\n        <div className=\"App\">\n          <SearchBar onSearch={this.search}/>\n          <div className='App-playlist'>\n            <SearchResults \n              searchResults={this.state.searchResults} \n              onAdd={this.addTrack}\n            />\n            <Playlist \n              playlistName={this.state.playlistName} \n              playlistTracks={this.state.playlistTracks}\n              onRemove={this.removeTrack}\n              onNameChange={this.updatePlaylistName}\n              onSave={this.savePlaylist}\n            />\n            \n          </div>\n          <EmbeddedPLaylists playlists={this.state.playlists} removePlaylist={this.removePlaylist}/>\n        </div>\n      </div>\n    );\n  }\n  \n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}